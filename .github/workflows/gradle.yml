name: user-server CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Set YML
      run: |
        mkdir -p src/main/resources
        echo "${{ secrets.APPLICATION_YML }}" | base64 --decode > src/main/resources/application.yml
      shell: bash

    - name: Set YML PRODUCTION
      run: |
        mkdir -p src/main/resources
        echo "${{ secrets.APPLICATION_PRODUCTION_YML }}" | base64 --decode > src/main/resources/application-production.yml
      shell: bash

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew build
      
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{secrets.DOCKER_USERNAME}}
        password: ${{secrets.DOCKER_TOKEN}}

    - name: build and release to DockerHub 
      env:
        NAME: ${{secrets.DOCKER_USERNAME}}
        REPO: user-server
      run: |
        docker build -t $REPO .
        docker tag $REPO:latest $NAME/$REPO:latest
        docker push $NAME/$REPO:latest
        
  deploy:
    needs: build
    name: Deploy
    runs-on: [ self-hosted ]
    steps:
      - name: Stop and Remove Docker Image
        run: |
          sudo docker ps -q --filter "name=user-server" | grep -q . && sudo docker stop "user-server" && sudo docker rmi -f "${{secrets.DOCKER_USERNAME}}/user-server"
          sudo docker pull ${{secrets.DOCKER_USERNAME}}/user-server
          sudo docker run -d --name user-server --rm -p 8080:8080 ${{secrets.DOCKER_USERNAME}}/user-server
 
